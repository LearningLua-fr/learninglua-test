function contains_function_declaration(code)
    return string.match(code, "function%s+DoubleArrayForEvenInteger%s*%(%s*inputTab%s*%)") ~= nil
end

function contains_return_statement(code)
    return string.match(code, "return%s+%[") ~= nil  -- Vérifie si une table est retournée
end

function contains_for_loop(code)
    return string.match(code, "for%s+i%s+in%s+pairs%(%s*inputTab%s*%)") ~= nil
end

function contains_if_statement(code)
    return string.match(code, "if%s+inputTab%[i%]%s+%% 2%s+~= 0") ~= nil  -- Vérifie la condition pour les nombres impairs
end

function contains_multiplication(code)
    return string.match(code, "inputTab%[i%]%s*=%s*inputTab%[i%]%s*%*%s*2") ~= nil  -- Vérifie si le nombre impair est multiplié par 2
end

function run_test(user_code)
    if contains_function_declaration(user_code) then
        print("Test Passed 1/5: Function 'DoubleArrayForEvenInteger' is correctly defined")
    else
        print("Test Failed 1/5: Function 'DoubleArrayForEvenInteger' is missing or incorrect")
    end

    if contains_return_statement(user_code) then
        print("Test Passed 2/5: Return statement is correctly defined")
    else
        print("Test Failed 2/5: Return statement is missing or incorrect")
    end

    if contains_for_loop(user_code) then
        print("Test Passed 3/5: For loop is correctly defined")
    else
        print("Test Failed 3/5: For loop is missing or incorrect")
    end

    if contains_if_statement(user_code) then
        print("Test Passed 4/5: If statement is correctly defined")
    else
        print("Test Failed 4/5: If statement is missing or incorrect")
    end

    if contains_multiplication(user_code) then
        print("Test Passed 5/5: Multiplication of odd number is correctly defined")
    else
        print("Test Failed 5/5: Multiplication of odd number is missing or incorrect")
    end

    if contains_function_declaration(user_code) and contains_return_statement(user_code) and 
       contains_for_loop(user_code) and contains_if_statement(user_code) and 
       contains_multiplication(user_code) then
        print("All tests passed")
    else
        print("Some tests failed")
    end
end

-- Exemple de code de l'utilisateur à tester
local user_code = [[
function DoubleArrayForEvenInteger(inputTab)
    for i = 1, #inputTab do
        if inputTab[i] % 2 ~= 0 then
            inputTab[i] = inputTab[i] * 2
        end
    end
    return inputTab
end
]]

run_test(user_code)
