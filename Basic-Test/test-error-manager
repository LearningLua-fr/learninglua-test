function contains_function_declaration(code)
    return string.match(code, "function%s+somme%s*%(%s*a%s*,%s*b%s*%)") ~= nil
end

function contains_type_check(code)
    return string.match(code, 'if%s+type%(a%)%s*~=%s*"number"%s*or%s+type%(b%)%s*~=%s*"number"%s*then') ~= nil
end

function contains_return_error(code)
    return string.match(code, 'return%s+"Erreur:%s+Les%s+deux%s+arguments%s+doivent%s+Ãªtre%s+des%s+nombres"') ~= nil
end

function contains_return_sum(code)
    return string.match(code, "return%s+a%s*%+%s*b") ~= nil
end

function contains_print_call(code)
    return string.match(code, 'print%s*%(%s*somme%s*%(%s*5%s*,%s*"x"%s*%)') ~= nil and string.match(code, 'print%s*%(%s*somme%s*%(%s*10%s*,%s*20%s*%)') ~= nil
end

function run_test(user_code)
    if contains_function_declaration(user_code) then
        print("Test Passed 1/5: Function 'somme' is correctly defined")
    else
        print("Test Failed 1/5: Function 'somme' is missing or incorrect")
    end

    if contains_type_check(user_code) then
        print("Test Passed 2/5: Type check is correct")
    else
        print("Test Failed 2/5: Type check is missing or incorrect")
    end

    if contains_return_error(user_code) then
        print("Test Passed 3/5: Error message is correctly returned")
    else
        print("Test Failed 3/5: Error message is missing or incorrect")
    end

    if contains_return_sum(user_code) then
        print("Test Passed 4/5: Return statement (sum) is correct")
    else
        print("Test Failed 4/5: Return statement is missing or incorrect")
    end

    if contains_print_call(user_code) then
        print("Test Passed 5/5: Print statement is correct")
    else
        print("Test Failed 5/5: Print statement is missing or incorrect")
    end

    if contains_function_declaration(user_code) and contains_type_check(user_code) and contains_return_error(user_code) and contains_return_sum(user_code) and contains_print_call(user_code) then
        print("All tests passed")
    else
        print("Some tests failed")
    end
end

run_test(user_code)
